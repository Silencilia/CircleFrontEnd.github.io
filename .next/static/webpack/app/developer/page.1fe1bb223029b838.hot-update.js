"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/developer/page",{

/***/ "(app-pages-browser)/./components/Tag/SubjectTag.tsx":
/*!***************************************!*\
  !*** ./components/Tag/SubjectTag.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Tag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tag */ \"(app-pages-browser)/./components/Tag/Tag.tsx\");\n/* harmony import */ var _contexts_ContactContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/ContactContext */ \"(app-pages-browser)/./contexts/ContactContext.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst SubjectTag = (param)=>{\n    let { subject, contactId, fillColor = \"bg-circle-secondary\", textColor = \"text-white\", className = \"\", onClick, editable = false, deletable = false, onEditComplete, onDeleteComplete } = param;\n    _s();\n    const { updateContactAsync } = (0,_contexts_ContactContext__WEBPACK_IMPORTED_MODULE_3__.useContacts)();\n    const minWidth = Math.max(subject.label.length * 8, 34);\n    const handleEdit = async (newLabel)=>{\n        try {\n            // TODO: Update the subject in the database\n            // For now, we'll update the subject label through the contact context\n            // In a real implementation, you might have a updateSubjectAsync method\n            console.log(\"Editing subject \".concat(subject.id, ' from \"').concat(subject.label, '\" to \"').concat(newLabel, '\"'));\n            // This is a placeholder - you might need to implement subject editing in your data service\n            // The actual implementation would depend on how you want to handle subject updates\n            if (onEditComplete) {\n                onEditComplete();\n            }\n        } catch (error) {\n            console.error(\"Failed to edit subject:\", error);\n        }\n    };\n    const handleDelete = async ()=>{\n        try {\n            if (contactId && updateContactAsync) {\n                // Remove this subject from the contact\n                console.log(\"Removing subject \".concat(subject.id, ': \"').concat(subject.label, '\" from contact ').concat(contactId));\n                // This would require getting the current contact data first\n                // For now, we'll just log the action as the exact implementation\n                // depends on your data flow architecture\n                if (onDeleteComplete) {\n                    onDeleteComplete();\n                }\n            } else {\n                // If no contactId provided, just log the action\n                console.log(\"Deleting subject \".concat(subject.id, ': \"').concat(subject.label, '\"'));\n                if (onDeleteComplete) {\n                    onDeleteComplete();\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to delete subject:\", error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Tag__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        fillColor: fillColor,\n        textColor: textColor,\n        className: className,\n        minWidth: minWidth,\n        onClick: onClick ? ()=>onClick(subject) : undefined,\n        editable: editable,\n        onEdit: editable ? handleEdit : undefined,\n        onDelete: deletable ? handleDelete : undefined,\n        showDelete: deletable,\n        children: subject.label\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\silen\\\\OneDrive\\\\Documents\\\\App Development\\\\Circle\\\\components\\\\Tag\\\\SubjectTag.tsx\",\n        lineNumber: 77,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SubjectTag, \"nYvFsgHLOjBdMcQXr2SRLd7EeJE=\", false, function() {\n    return [\n        _contexts_ContactContext__WEBPACK_IMPORTED_MODULE_3__.useContacts\n    ];\n});\n_c = SubjectTag;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SubjectTag);\nvar _c;\n$RefreshReg$(_c, \"SubjectTag\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVGFnL1N1YmplY3RUYWcudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBCO0FBQ0Y7QUFDNkM7QUFlckUsTUFBTUcsYUFBd0M7UUFBQyxFQUM3Q0MsT0FBTyxFQUNQQyxTQUFTLEVBQ1RDLFlBQVkscUJBQXFCLEVBQ2pDQyxZQUFZLFlBQVksRUFDeEJDLFlBQVksRUFBRSxFQUNkQyxPQUFPLEVBQ1BDLFdBQVcsS0FBSyxFQUNoQkMsWUFBWSxLQUFLLEVBQ2pCQyxjQUFjLEVBQ2RDLGdCQUFnQixFQUNqQjs7SUFDQyxNQUFNLEVBQUVDLGtCQUFrQixFQUFFLEdBQUdaLHFFQUFXQTtJQUMxQyxNQUFNYSxXQUFXQyxLQUFLQyxHQUFHLENBQUNiLFFBQVFjLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7SUFFcEQsTUFBTUMsYUFBYSxPQUFPQztRQUN4QixJQUFJO1lBQ0YsMkNBQTJDO1lBQzNDLHNFQUFzRTtZQUN0RSx1RUFBdUU7WUFDdkVDLFFBQVFDLEdBQUcsQ0FBQyxtQkFBdUNuQixPQUFwQkEsUUFBUW9CLEVBQUUsRUFBQyxXQUErQkgsT0FBdEJqQixRQUFRYyxLQUFLLEVBQUMsVUFBaUIsT0FBVEcsVUFBUztZQUVsRiwyRkFBMkY7WUFDM0YsbUZBQW1GO1lBRW5GLElBQUlULGdCQUFnQjtnQkFDbEJBO1lBQ0Y7UUFDRixFQUFFLE9BQU9hLE9BQU87WUFDZEgsUUFBUUcsS0FBSyxDQUFDLDJCQUEyQkE7UUFDM0M7SUFDRjtJQUVBLE1BQU1DLGVBQWU7UUFDbkIsSUFBSTtZQUNGLElBQUlyQixhQUFhUyxvQkFBb0I7Z0JBQ25DLHVDQUF1QztnQkFDdkNRLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0NuQixPQUFoQkEsUUFBUW9CLEVBQUUsRUFBQyxPQUFvQ25CLE9BQS9CRCxRQUFRYyxLQUFLLEVBQUMsbUJBQTJCLE9BQVZiO2dCQUUvRSw0REFBNEQ7Z0JBQzVELGlFQUFpRTtnQkFDakUseUNBQXlDO2dCQUV6QyxJQUFJUSxrQkFBa0I7b0JBQ3BCQTtnQkFDRjtZQUNGLE9BQU87Z0JBQ0wsZ0RBQWdEO2dCQUNoRFMsUUFBUUMsR0FBRyxDQUFDLG9CQUFvQ25CLE9BQWhCQSxRQUFRb0IsRUFBRSxFQUFDLE9BQW1CLE9BQWRwQixRQUFRYyxLQUFLLEVBQUM7Z0JBQzlELElBQUlMLGtCQUFrQjtvQkFDcEJBO2dCQUNGO1lBQ0Y7UUFDRixFQUFFLE9BQU9ZLE9BQU87WUFDZEgsUUFBUUcsS0FBSyxDQUFDLDZCQUE2QkE7UUFDN0M7SUFDRjtJQUVBLHFCQUNFLDhEQUFDeEIsNENBQUdBO1FBQ0ZLLFdBQVdBO1FBQ1hDLFdBQVdBO1FBQ1hDLFdBQVdBO1FBQ1hPLFVBQVVBO1FBQ1ZOLFNBQVNBLFVBQVUsSUFBTUEsUUFBUUwsV0FBV3VCO1FBQzVDakIsVUFBVUE7UUFDVmtCLFFBQVFsQixXQUFXVSxhQUFhTztRQUNoQ0UsVUFBVWxCLFlBQVllLGVBQWVDO1FBQ3JDRyxZQUFZbkI7a0JBRVhQLFFBQVFjLEtBQUs7Ozs7OztBQUdwQjtHQXpFTWY7O1FBWTJCRCxpRUFBV0E7OztLQVp0Q0M7QUEyRU4sK0RBQWVBLFVBQVVBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9UYWcvU3ViamVjdFRhZy50c3g/NjI5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhZyBmcm9tICcuL1RhZyc7XG5pbXBvcnQgeyBTdWJqZWN0LCB1c2VDb250YWN0cyB9IGZyb20gJy4uLy4uL2NvbnRleHRzL0NvbnRhY3RDb250ZXh0JztcblxuaW50ZXJmYWNlIFN1YmplY3RUYWdQcm9wcyB7XG4gIHN1YmplY3Q6IFN1YmplY3Q7XG4gIGNvbnRhY3RJZD86IG51bWJlcjtcbiAgZmlsbENvbG9yPzogc3RyaW5nO1xuICB0ZXh0Q29sb3I/OiBzdHJpbmc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgb25DbGljaz86IChzdWJqZWN0OiBTdWJqZWN0KSA9PiB2b2lkO1xuICBlZGl0YWJsZT86IGJvb2xlYW47XG4gIGRlbGV0YWJsZT86IGJvb2xlYW47XG4gIG9uRWRpdENvbXBsZXRlPzogKCkgPT4gdm9pZDtcbiAgb25EZWxldGVDb21wbGV0ZT86ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFN1YmplY3RUYWc6IFJlYWN0LkZDPFN1YmplY3RUYWdQcm9wcz4gPSAoe1xuICBzdWJqZWN0LFxuICBjb250YWN0SWQsXG4gIGZpbGxDb2xvciA9ICdiZy1jaXJjbGUtc2Vjb25kYXJ5JyxcbiAgdGV4dENvbG9yID0gJ3RleHQtd2hpdGUnLFxuICBjbGFzc05hbWUgPSAnJyxcbiAgb25DbGljayxcbiAgZWRpdGFibGUgPSBmYWxzZSxcbiAgZGVsZXRhYmxlID0gZmFsc2UsXG4gIG9uRWRpdENvbXBsZXRlLFxuICBvbkRlbGV0ZUNvbXBsZXRlLFxufSkgPT4ge1xuICBjb25zdCB7IHVwZGF0ZUNvbnRhY3RBc3luYyB9ID0gdXNlQ29udGFjdHMoKTtcbiAgY29uc3QgbWluV2lkdGggPSBNYXRoLm1heChzdWJqZWN0LmxhYmVsLmxlbmd0aCAqIDgsIDM0KTtcblxuICBjb25zdCBoYW5kbGVFZGl0ID0gYXN5bmMgKG5ld0xhYmVsOiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gVE9ETzogVXBkYXRlIHRoZSBzdWJqZWN0IGluIHRoZSBkYXRhYmFzZVxuICAgICAgLy8gRm9yIG5vdywgd2UnbGwgdXBkYXRlIHRoZSBzdWJqZWN0IGxhYmVsIHRocm91Z2ggdGhlIGNvbnRhY3QgY29udGV4dFxuICAgICAgLy8gSW4gYSByZWFsIGltcGxlbWVudGF0aW9uLCB5b3UgbWlnaHQgaGF2ZSBhIHVwZGF0ZVN1YmplY3RBc3luYyBtZXRob2RcbiAgICAgIGNvbnNvbGUubG9nKGBFZGl0aW5nIHN1YmplY3QgJHtzdWJqZWN0LmlkfSBmcm9tIFwiJHtzdWJqZWN0LmxhYmVsfVwiIHRvIFwiJHtuZXdMYWJlbH1cImApO1xuICAgICAgXG4gICAgICAvLyBUaGlzIGlzIGEgcGxhY2Vob2xkZXIgLSB5b3UgbWlnaHQgbmVlZCB0byBpbXBsZW1lbnQgc3ViamVjdCBlZGl0aW5nIGluIHlvdXIgZGF0YSBzZXJ2aWNlXG4gICAgICAvLyBUaGUgYWN0dWFsIGltcGxlbWVudGF0aW9uIHdvdWxkIGRlcGVuZCBvbiBob3cgeW91IHdhbnQgdG8gaGFuZGxlIHN1YmplY3QgdXBkYXRlc1xuICAgICAgXG4gICAgICBpZiAob25FZGl0Q29tcGxldGUpIHtcbiAgICAgICAgb25FZGl0Q29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGVkaXQgc3ViamVjdDonLCBlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZURlbGV0ZSA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKGNvbnRhY3RJZCAmJiB1cGRhdGVDb250YWN0QXN5bmMpIHtcbiAgICAgICAgLy8gUmVtb3ZlIHRoaXMgc3ViamVjdCBmcm9tIHRoZSBjb250YWN0XG4gICAgICAgIGNvbnNvbGUubG9nKGBSZW1vdmluZyBzdWJqZWN0ICR7c3ViamVjdC5pZH06IFwiJHtzdWJqZWN0LmxhYmVsfVwiIGZyb20gY29udGFjdCAke2NvbnRhY3RJZH1gKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRoaXMgd291bGQgcmVxdWlyZSBnZXR0aW5nIHRoZSBjdXJyZW50IGNvbnRhY3QgZGF0YSBmaXJzdFxuICAgICAgICAvLyBGb3Igbm93LCB3ZSdsbCBqdXN0IGxvZyB0aGUgYWN0aW9uIGFzIHRoZSBleGFjdCBpbXBsZW1lbnRhdGlvblxuICAgICAgICAvLyBkZXBlbmRzIG9uIHlvdXIgZGF0YSBmbG93IGFyY2hpdGVjdHVyZVxuICAgICAgICBcbiAgICAgICAgaWYgKG9uRGVsZXRlQ29tcGxldGUpIHtcbiAgICAgICAgICBvbkRlbGV0ZUNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIG5vIGNvbnRhY3RJZCBwcm92aWRlZCwganVzdCBsb2cgdGhlIGFjdGlvblxuICAgICAgICBjb25zb2xlLmxvZyhgRGVsZXRpbmcgc3ViamVjdCAke3N1YmplY3QuaWR9OiBcIiR7c3ViamVjdC5sYWJlbH1cImApO1xuICAgICAgICBpZiAob25EZWxldGVDb21wbGV0ZSkge1xuICAgICAgICAgIG9uRGVsZXRlQ29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZGVsZXRlIHN1YmplY3Q6JywgZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxUYWdcbiAgICAgIGZpbGxDb2xvcj17ZmlsbENvbG9yfVxuICAgICAgdGV4dENvbG9yPXt0ZXh0Q29sb3J9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgIG1pbldpZHRoPXttaW5XaWR0aH1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2sgPyAoKSA9PiBvbkNsaWNrKHN1YmplY3QpIDogdW5kZWZpbmVkfVxuICAgICAgZWRpdGFibGU9e2VkaXRhYmxlfVxuICAgICAgb25FZGl0PXtlZGl0YWJsZSA/IGhhbmRsZUVkaXQgOiB1bmRlZmluZWR9XG4gICAgICBvbkRlbGV0ZT17ZGVsZXRhYmxlID8gaGFuZGxlRGVsZXRlIDogdW5kZWZpbmVkfVxuICAgICAgc2hvd0RlbGV0ZT17ZGVsZXRhYmxlfVxuICAgID5cbiAgICAgIHtzdWJqZWN0LmxhYmVsfVxuICAgIDwvVGFnPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU3ViamVjdFRhZztcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlRhZyIsInVzZUNvbnRhY3RzIiwiU3ViamVjdFRhZyIsInN1YmplY3QiLCJjb250YWN0SWQiLCJmaWxsQ29sb3IiLCJ0ZXh0Q29sb3IiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiZWRpdGFibGUiLCJkZWxldGFibGUiLCJvbkVkaXRDb21wbGV0ZSIsIm9uRGVsZXRlQ29tcGxldGUiLCJ1cGRhdGVDb250YWN0QXN5bmMiLCJtaW5XaWR0aCIsIk1hdGgiLCJtYXgiLCJsYWJlbCIsImxlbmd0aCIsImhhbmRsZUVkaXQiLCJuZXdMYWJlbCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImVycm9yIiwiaGFuZGxlRGVsZXRlIiwidW5kZWZpbmVkIiwib25FZGl0Iiwib25EZWxldGUiLCJzaG93RGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Tag/SubjectTag.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./contexts/ContactContext.tsx":
/*!*************************************!*\
  !*** ./contexts/ContactContext.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContactProvider: function() { return /* binding */ ContactProvider; },\n/* harmony export */   useContacts: function() { return /* binding */ useContacts; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_sampleData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/sampleData */ \"(app-pages-browser)/./data/sampleData.ts\");\n/* harmony import */ var _data_dataService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/dataService */ \"(app-pages-browser)/./data/dataService.ts\");\n/* __next_internal_client_entry_do_not_use__ ContactProvider,useContacts auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst initialState = {\n    contacts: [],\n    subjects: [],\n    organizations: [],\n    occupations: [],\n    relationships: [],\n    notes: [],\n    isLoading: true,\n    error: null\n};\nfunction contactReducer(state, action) {\n    console.log(\"ContactContext: Reducer action:\", action.type);\n    switch(action.type){\n        case \"SET_CONTACTS\":\n            console.log(\"ContactContext: Setting contacts:\", action.payload);\n            return {\n                ...state,\n                contacts: action.payload,\n                isLoading: false\n            };\n        case \"SET_SUBJECTS\":\n            console.log(\"ContactContext: Setting subjects:\", action.payload);\n            return {\n                ...state,\n                subjects: action.payload\n            };\n        case \"SET_ORGANIZATIONS\":\n            console.log(\"ContactContext: Setting organizations:\", action.payload);\n            return {\n                ...state,\n                organizations: action.payload\n            };\n        case \"SET_OCCUPATIONS\":\n            console.log(\"ContactContext: Setting occupations:\", action.payload);\n            return {\n                ...state,\n                occupations: action.payload\n            };\n        case \"SET_RELATIONSHIPS\":\n            console.log(\"ContactContext: Setting relationships:\", action.payload);\n            return {\n                ...state,\n                relationships: action.payload\n            };\n        case \"SET_NOTES\":\n            console.log(\"ContactContext: Setting notes:\", action.payload);\n            return {\n                ...state,\n                notes: action.payload\n            };\n        case \"ADD_CONTACT\":\n            return {\n                ...state,\n                contacts: [\n                    ...state.contacts,\n                    action.payload\n                ]\n            };\n        case \"UPDATE_CONTACT\":\n            return {\n                ...state,\n                contacts: state.contacts.map((contact)=>contact.id === action.payload.id ? {\n                        ...contact,\n                        ...action.payload.updates\n                    } : contact)\n            };\n        case \"DELETE_CONTACT\":\n            return {\n                ...state,\n                contacts: state.contacts.filter((contact)=>contact.id !== action.payload)\n            };\n        case \"ADD_SUBJECT\":\n            return {\n                ...state,\n                subjects: [\n                    ...state.subjects,\n                    action.payload\n                ]\n            };\n        case \"ADD_ORGANIZATION\":\n            return {\n                ...state,\n                organizations: [\n                    ...state.organizations,\n                    action.payload\n                ]\n            };\n        case \"ADD_OCCUPATION\":\n            return {\n                ...state,\n                occupations: [\n                    ...state.occupations,\n                    action.payload\n                ]\n            };\n        case \"ADD_RELATIONSHIP\":\n            return {\n                ...state,\n                relationships: [\n                    ...state.relationships,\n                    action.payload\n                ]\n            };\n        case \"ADD_NOTE\":\n            return {\n                ...state,\n                notes: [\n                    ...state.notes,\n                    action.payload\n                ]\n            };\n        case \"SET_LOADING\":\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                error: action.payload\n            };\n        case \"SET_ALL_DATA\":\n            return {\n                ...state,\n                contacts: action.payload.contacts,\n                subjects: action.payload.subjects,\n                organizations: action.payload.organizations,\n                occupations: action.payload.occupations,\n                relationships: action.payload.relationships,\n                notes: action.payload.notes,\n                isLoading: false,\n                error: null\n            };\n        case \"RESET_TO_SAMPLE\":\n            const sampleData = (0,_data_sampleData__WEBPACK_IMPORTED_MODULE_2__.getSampleData)();\n            console.log(\"ContactContext: Resetting to sample data:\", sampleData);\n            return {\n                ...state,\n                contacts: sampleData.contacts,\n                subjects: sampleData.subjects,\n                organizations: sampleData.organizations,\n                occupations: sampleData.occupations,\n                relationships: sampleData.relationships,\n                notes: sampleData.notes,\n                isLoading: false\n            };\n        case \"RELOAD_FROM_STORAGE\":\n            const savedData = localStorage.getItem(\"circle-data\");\n            if (savedData) {\n                try {\n                    const data = JSON.parse(savedData);\n                    console.log(\"ContactContext: Reloading from localStorage:\", data);\n                    // Check if the data format is valid (has proper subjects/relationships arrays)\n                    const isValidData = data.subjects && Array.isArray(data.subjects) && data.relationships && Array.isArray(data.relationships) && data.contacts && Array.isArray(data.contacts);\n                    if (!isValidData) {\n                        console.warn(\"ContactContext: Invalid data format detected, clearing localStorage\");\n                        localStorage.removeItem(\"circle-data\");\n                        throw new Error(\"Invalid data format\");\n                    }\n                    // Return new state with reloaded data\n                    const reconstructedContacts = data.contacts.map((contact)=>({\n                            ...contact,\n                            subjects: (contact.subjects || []).map((subjectId)=>data.subjects.find((s)=>s.id === subjectId)).filter(Boolean),\n                            relationships: (contact.relationships || []).map((relationshipId)=>data.relationships.find((r)=>r.id === relationshipId)).filter(Boolean)\n                        }));\n                    return {\n                        ...state,\n                        contacts: reconstructedContacts,\n                        subjects: data.subjects,\n                        organizations: data.organizations || [],\n                        occupations: data.occupations || [],\n                        relationships: data.relationships,\n                        notes: data.notes || [],\n                        isLoading: false\n                    };\n                } catch (error) {\n                    console.error(\"Failed to parse saved data:\", error);\n                    // Clear corrupted data and use fresh sample data\n                    localStorage.removeItem(\"circle-data\");\n                    const sampleData = (0,_data_sampleData__WEBPACK_IMPORTED_MODULE_2__.getSampleData)();\n                    return {\n                        ...state,\n                        contacts: sampleData.contacts,\n                        subjects: sampleData.subjects,\n                        organizations: sampleData.organizations,\n                        occupations: sampleData.occupations,\n                        relationships: sampleData.relationships,\n                        notes: sampleData.notes,\n                        isLoading: false\n                    };\n                }\n            } else {\n                const sampleData = (0,_data_sampleData__WEBPACK_IMPORTED_MODULE_2__.getSampleData)();\n                return {\n                    ...state,\n                    contacts: sampleData.contacts,\n                    subjects: sampleData.subjects,\n                    organizations: sampleData.organizations,\n                    occupations: sampleData.occupations,\n                    relationships: sampleData.relationships,\n                    notes: sampleData.notes,\n                    isLoading: false\n                };\n            }\n        default:\n            return state;\n    }\n}\nconst ContactContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nfunction ContactProvider(param) {\n    let { children } = param;\n    _s();\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(contactReducer, initialState);\n    // Load data using DataService on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"ContactContext: Starting data load using DataService...\");\n        const loadData = async ()=>{\n            try {\n                dispatch({\n                    type: \"SET_LOADING\",\n                    payload: true\n                });\n                dispatch({\n                    type: \"SET_ERROR\",\n                    payload: null\n                });\n                const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n                console.log(\"ContactContext: Loaded data from DataService:\", data);\n                dispatch({\n                    type: \"SET_ALL_DATA\",\n                    payload: data\n                });\n            } catch (error) {\n                console.error(\"ContactContext: Failed to load data:\", error);\n                dispatch({\n                    type: \"SET_ERROR\",\n                    payload: \"Failed to load data\"\n                });\n                dispatch({\n                    type: \"SET_LOADING\",\n                    payload: false\n                });\n                // Fallback to sample data\n                try {\n                    const sampleData = (0,_data_sampleData__WEBPACK_IMPORTED_MODULE_2__.getSampleData)();\n                    console.log(\"ContactContext: Using fallback sample data:\", sampleData);\n                    dispatch({\n                        type: \"SET_ALL_DATA\",\n                        payload: sampleData\n                    });\n                } catch (fallbackError) {\n                    console.error(\"ContactContext: Even sample data failed:\", fallbackError);\n                    dispatch({\n                        type: \"SET_ERROR\",\n                        payload: \"Failed to load any data\"\n                    });\n                    dispatch({\n                        type: \"SET_LOADING\",\n                        payload: false\n                    });\n                }\n            }\n        };\n        loadData();\n    }, []);\n    // Save data to localStorage whenever state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!state.isLoading) {\n            // Convert contacts to save format with subject/relationship IDs instead of full objects\n            const contactsForSave = state.contacts.map((contact)=>({\n                    ...contact,\n                    occupation: contact.occupationId || null,\n                    organization: contact.organizationId || null,\n                    subjects: contact.subjectIds || [],\n                    relationships: contact.relationshipIds || []\n                }));\n            localStorage.setItem(\"circle-data\", JSON.stringify({\n                contacts: contactsForSave,\n                subjects: state.subjects,\n                organizations: state.organizations,\n                occupations: state.occupations,\n                relationships: state.relationships,\n                notes: state.notes\n            }));\n        }\n    }, [\n        state.contacts,\n        state.subjects,\n        state.organizations,\n        state.occupations,\n        state.relationships,\n        state.notes,\n        state.isLoading\n    ]);\n    // Legacy synchronous methods (for backward compatibility)\n    const addContact = (contact)=>{\n        const newContact = {\n            ...contact,\n            id: Date.now()\n        };\n        dispatch({\n            type: \"ADD_CONTACT\",\n            payload: newContact\n        });\n    };\n    const updateContact = (id, updates)=>{\n        dispatch({\n            type: \"UPDATE_CONTACT\",\n            payload: {\n                id,\n                updates\n            }\n        });\n    };\n    const deleteContact = (id)=>{\n        dispatch({\n            type: \"DELETE_CONTACT\",\n            payload: id\n        });\n    };\n    const addSubject = (subject)=>{\n        const newSubject = {\n            ...subject,\n            id: Date.now()\n        };\n        dispatch({\n            type: \"ADD_SUBJECT\",\n            payload: newSubject\n        });\n    };\n    const addOrganization = (organization)=>{\n        const newOrganization = {\n            ...organization,\n            id: Date.now()\n        };\n        dispatch({\n            type: \"ADD_ORGANIZATION\",\n            payload: newOrganization\n        });\n    };\n    const addOccupation = (occupation)=>{\n        const newOccupation = {\n            ...occupation,\n            id: Date.now()\n        };\n        dispatch({\n            type: \"ADD_OCCUPATION\",\n            payload: newOccupation\n        });\n    };\n    const addRelationship = (relationship)=>{\n        const newRelationship = {\n            ...relationship,\n            id: Date.now()\n        };\n        dispatch({\n            type: \"ADD_RELATIONSHIP\",\n            payload: newRelationship\n        });\n    };\n    const addNote = (note)=>{\n        const newNote = {\n            ...note,\n            id: Date.now(),\n            createdAt: new Date().toISOString()\n        };\n        dispatch({\n            type: \"ADD_NOTE\",\n            payload: newNote\n        });\n    };\n    // New async methods for unidirectional data flow\n    const updateContactAsync = async (id, updates)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            // Update via DataService\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.updateContact(id, updates);\n            // Reload all data to ensure consistency\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to update contact:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to update contact: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addContactAsync = async (contact)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addContact(contact);\n            // Reload all data to ensure consistency\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add contact:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add contact: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const deleteContactAsync = async (id)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.deleteContact(id);\n            // Reload all data to ensure consistency\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to delete contact:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to delete contact: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addSubjectAsync = async (subject)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addSubject(subject);\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add subject:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add subject: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addOrganizationAsync = async (organization)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addOrganization(organization);\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add organization:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add organization: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addOccupationAsync = async (occupation)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addOccupation(occupation);\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add occupation:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add occupation: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addRelationshipAsync = async (relationship)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addRelationship(relationship);\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add relationship:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add relationship: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const addNoteAsync = async (note)=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: null\n            });\n            await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.addNote(note);\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to add note:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to add note: \".concat(errorMessage)\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n            throw error;\n        }\n    };\n    const resetToSample = async ()=>{\n        try {\n            // Clear localStorage to force fresh sample data\n            localStorage.removeItem(\"circle-data\");\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            // Get fresh sample data\n            const sampleData = (0,_data_sampleData__WEBPACK_IMPORTED_MODULE_2__.getSampleData)();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: sampleData\n            });\n        } catch (error) {\n            console.error(\"Failed to reset to sample data:\", error);\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to reset to sample data\"\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    const reloadFromStorage = async ()=>{\n        try {\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: true\n            });\n            const data = await _data_dataService__WEBPACK_IMPORTED_MODULE_3__.dataService.getAllData();\n            dispatch({\n                type: \"SET_ALL_DATA\",\n                payload: data\n            });\n        } catch (error) {\n            console.error(\"Failed to reload from storage:\", error);\n            dispatch({\n                type: \"SET_ERROR\",\n                payload: \"Failed to reload data\"\n            });\n            dispatch({\n                type: \"SET_LOADING\",\n                payload: false\n            });\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContactContext.Provider, {\n        value: {\n            state,\n            addContact,\n            updateContact,\n            deleteContact,\n            addSubject,\n            addOrganization,\n            addOccupation,\n            addRelationship,\n            addNote,\n            resetToSample,\n            reloadFromStorage,\n            // New async methods\n            updateContactAsync,\n            addContactAsync,\n            deleteContactAsync,\n            addSubjectAsync,\n            addOrganizationAsync,\n            addOccupationAsync,\n            addRelationshipAsync,\n            addNoteAsync\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\silen\\\\OneDrive\\\\Documents\\\\App Development\\\\Circle\\\\contexts\\\\ContactContext.tsx\",\n        lineNumber: 551,\n        columnNumber: 5\n    }, this);\n}\n_s(ContactProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = ContactProvider;\nfunction useContacts() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ContactContext);\n    if (!context) {\n        throw new Error(\"useContacts must be used within a ContactProvider\");\n    }\n    return context;\n}\n_s1(useContacts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ContactProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./contexts/ContactContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./data/dataService.ts":
/*!*****************************!*\
  !*** ./data/dataService.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MockDataService: function() { return /* binding */ MockDataService; },\n/* harmony export */   dataService: function() { return /* binding */ dataService; }\n/* harmony export */ });\n/* harmony import */ var _sampleData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sampleData */ \"(app-pages-browser)/./data/sampleData.ts\");\n\n// Mock implementation that simulates database operations\nclass MockDataService {\n    loadData() {\n        const savedData = localStorage.getItem(\"circle-data\");\n        if (savedData) {\n            try {\n                const parsed = JSON.parse(savedData);\n                // Validate data structure\n                if (this.isValidData(parsed)) {\n                    return parsed;\n                } else {\n                    console.warn(\"MockDataService: Invalid data format, using sample data\");\n                    localStorage.removeItem(\"circle-data\");\n                }\n            } catch (error) {\n                console.error(\"MockDataService: Failed to parse saved data, using sample data\");\n                localStorage.removeItem(\"circle-data\");\n            }\n        }\n        return (0,_sampleData__WEBPACK_IMPORTED_MODULE_0__.getSampleData)();\n    }\n    isValidData(data) {\n        return data.subjects && Array.isArray(data.subjects) && data.relationships && Array.isArray(data.relationships) && data.contacts && Array.isArray(data.contacts) && data.organizations && Array.isArray(data.organizations) && data.occupations && Array.isArray(data.occupations) && data.notes && Array.isArray(data.notes);\n    }\n    saveData() {\n        localStorage.setItem(\"circle-data\", JSON.stringify(this.data));\n    }\n    simulateDelay() {\n        // Simulate network delay (50-200ms)\n        const delay = Math.random() * 150 + 50;\n        return new Promise((resolve)=>setTimeout(resolve, delay));\n    }\n    async updateContact(id, updates) {\n        await this.simulateDelay();\n        const contactIndex = this.data.contacts.findIndex((c)=>c.id === id);\n        if (contactIndex === -1) {\n            throw new Error(\"Contact with id \".concat(id, \" not found\"));\n        }\n        // Update the contact\n        this.data.contacts[contactIndex] = {\n            ...this.data.contacts[contactIndex],\n            ...updates\n        };\n        this.saveData();\n        return this.data.contacts[contactIndex];\n    }\n    async addContact(contact) {\n        await this.simulateDelay();\n        const newContact = {\n            ...contact,\n            id: Date.now() // Simple ID generation for mock\n        };\n        this.data.contacts.push(newContact);\n        this.saveData();\n        return newContact;\n    }\n    async deleteContact(id) {\n        await this.simulateDelay();\n        const initialLength = this.data.contacts.length;\n        this.data.contacts = this.data.contacts.filter((c)=>c.id !== id);\n        if (this.data.contacts.length === initialLength) {\n            throw new Error(\"Contact with id \".concat(id, \" not found\"));\n        }\n        this.saveData();\n    }\n    async addSubject(subject) {\n        await this.simulateDelay();\n        const newSubject = {\n            ...subject,\n            id: Date.now()\n        };\n        this.data.subjects.push(newSubject);\n        this.saveData();\n        return newSubject;\n    }\n    async addOrganization(organization) {\n        await this.simulateDelay();\n        const newOrganization = {\n            ...organization,\n            id: Date.now()\n        };\n        this.data.organizations.push(newOrganization);\n        this.saveData();\n        return newOrganization;\n    }\n    async addOccupation(occupation) {\n        await this.simulateDelay();\n        const newOccupation = {\n            ...occupation,\n            id: Date.now()\n        };\n        this.data.occupations.push(newOccupation);\n        this.saveData();\n        return newOccupation;\n    }\n    async addRelationship(relationship) {\n        await this.simulateDelay();\n        const newRelationship = {\n            ...relationship,\n            id: Date.now()\n        };\n        this.data.relationships.push(newRelationship);\n        this.saveData();\n        return newRelationship;\n    }\n    async addNote(note) {\n        await this.simulateDelay();\n        const newNote = {\n            ...note,\n            id: Date.now(),\n            createdAt: new Date().toISOString()\n        };\n        this.data.notes.push(newNote);\n        this.saveData();\n        return newNote;\n    }\n    async getAllData() {\n        await this.simulateDelay();\n        // Reload from localStorage to get latest data\n        this.data = this.loadData();\n        // Return a copy to prevent direct mutations\n        return {\n            contacts: [\n                ...this.data.contacts\n            ],\n            subjects: [\n                ...this.data.subjects\n            ],\n            organizations: [\n                ...this.data.organizations\n            ],\n            occupations: [\n                ...this.data.occupations\n            ],\n            relationships: [\n                ...this.data.relationships\n            ],\n            notes: [\n                ...this.data.notes\n            ]\n        };\n    }\n    constructor(){\n        this.data = this.loadData();\n    }\n}\n// Export singleton instance\nconst dataService = new MockDataService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/dataService.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./data/sampleData.ts":
/*!****************************!*\
  !*** ./data/sampleData.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSampleData: function() { return /* binding */ getSampleData; },\n/* harmony export */   sampleContacts: function() { return /* binding */ sampleContacts; },\n/* harmony export */   sampleNotes: function() { return /* binding */ sampleNotes; },\n/* harmony export */   sampleOccupations: function() { return /* binding */ sampleOccupations; },\n/* harmony export */   sampleOrganizations: function() { return /* binding */ sampleOrganizations; },\n/* harmony export */   sampleRelationships: function() { return /* binding */ sampleRelationships; },\n/* harmony export */   sampleSubjects: function() { return /* binding */ sampleSubjects; }\n/* harmony export */ });\nconst sampleOrganizations = [\n    {\n        id: 1,\n        name: \"TechCorp Inc.\"\n    },\n    {\n        id: 2,\n        name: \"Global Marketing Solutions\"\n    },\n    {\n        id: 3,\n        name: \"Creative Studio Pro\"\n    },\n    {\n        id: 4,\n        name: \"InnovateTech\"\n    },\n    {\n        id: 5,\n        name: \"DataFlow Analytics\"\n    },\n    {\n        id: 6,\n        name: \"Strategic Partners LLC\"\n    },\n    {\n        id: 7,\n        name: \"First National Bank\"\n    },\n    {\n        id: 8,\n        name: \"UserFirst Design\"\n    },\n    {\n        id: 9,\n        name: \"SalesForce Pro\"\n    },\n    {\n        id: 10,\n        name: \"Content Creators Co.\"\n    },\n    {\n        id: 11,\n        name: \"Efficient Operations Ltd.\"\n    },\n    {\n        id: 12,\n        name: \"Business Insights Group\"\n    }\n];\nconst sampleOccupations = [\n    {\n        id: 1,\n        title: \"Software Engineer\"\n    },\n    {\n        id: 2,\n        title: \"Marketing Manager\"\n    },\n    {\n        id: 3,\n        title: \"Designer\"\n    },\n    {\n        id: 4,\n        title: \"Product Manager\"\n    },\n    {\n        id: 5,\n        title: \"Data Scientist\"\n    },\n    {\n        id: 6,\n        title: \"Consultant\"\n    },\n    {\n        id: 7,\n        title: \"Financial Analyst\"\n    },\n    {\n        id: 8,\n        title: \"UX Researcher\"\n    },\n    {\n        id: 9,\n        title: \"Sales Director\"\n    },\n    {\n        id: 10,\n        title: \"Content Strategist\"\n    },\n    {\n        id: 11,\n        title: \"Operations Manager\"\n    },\n    {\n        id: 12,\n        title: \"Business Analyst\"\n    }\n];\nconst sampleSubjects = [\n    {\n        id: 1,\n        label: \"coffee\",\n        category: \"activity\"\n    },\n    {\n        id: 2,\n        label: \"tech\",\n        category: \"interest\"\n    },\n    {\n        id: 3,\n        label: \"music\",\n        category: \"hobby\"\n    },\n    {\n        id: 4,\n        label: \"travel\",\n        category: \"hobby\"\n    },\n    {\n        id: 5,\n        label: \"family\",\n        category: \"organization\"\n    },\n    {\n        id: 6,\n        label: \"food\",\n        category: \"interest\"\n    },\n    {\n        id: 7,\n        label: \"art\",\n        category: \"hobby\"\n    },\n    {\n        id: 8,\n        label: \"sports\",\n        category: \"activity\"\n    },\n    {\n        id: 9,\n        label: \"reading\",\n        category: \"hobby\"\n    },\n    {\n        id: 10,\n        label: \"photography\",\n        category: \"hobby\"\n    },\n    {\n        id: 11,\n        label: \"cooking\",\n        category: \"hobby\"\n    },\n    {\n        id: 12,\n        label: \"gaming\",\n        category: \"hobby\"\n    },\n    {\n        id: 13,\n        label: \"yoga\",\n        category: \"activity\"\n    },\n    {\n        id: 14,\n        label: \"dancing\",\n        category: \"activity\"\n    },\n    {\n        id: 15,\n        label: \"hiking\",\n        category: \"activity\"\n    },\n    {\n        id: 16,\n        label: \"swimming\",\n        category: \"activity\"\n    },\n    {\n        id: 17,\n        label: \"cycling\",\n        category: \"activity\"\n    },\n    {\n        id: 18,\n        label: \"running\",\n        category: \"activity\"\n    },\n    {\n        id: 19,\n        label: \"gardening\",\n        category: \"hobby\"\n    },\n    {\n        id: 20,\n        label: \"painting\",\n        category: \"hobby\"\n    },\n    {\n        id: 21,\n        label: \"writing\",\n        category: \"hobby\"\n    },\n    {\n        id: 22,\n        label: \"languages\",\n        category: \"interest\"\n    },\n    {\n        id: 23,\n        label: \"science\",\n        category: \"interest\"\n    },\n    {\n        id: 24,\n        label: \"history\",\n        category: \"interest\"\n    },\n    {\n        id: 25,\n        label: \"politics\",\n        category: \"interest\"\n    },\n    {\n        id: 26,\n        label: \"fashion\",\n        category: \"interest\"\n    },\n    {\n        id: 27,\n        label: \"cars\",\n        category: \"interest\"\n    },\n    {\n        id: 28,\n        label: \"pets\",\n        category: \"interest\"\n    },\n    {\n        id: 29,\n        label: \"volunteering\",\n        category: \"activity\"\n    },\n    {\n        id: 30,\n        label: \"meditation\",\n        category: \"activity\"\n    },\n    {\n        id: 31,\n        label: \"startup\",\n        category: \"organization\"\n    },\n    {\n        id: 32,\n        label: \"corporate\",\n        category: \"organization\"\n    },\n    {\n        id: 33,\n        label: \"nonprofit\",\n        category: \"organization\"\n    },\n    {\n        id: 34,\n        label: \"freelance\",\n        category: \"organization\"\n    },\n    {\n        id: 35,\n        label: \"academia\",\n        category: \"organization\"\n    }\n];\nconst sampleRelationships = [\n    {\n        id: 1,\n        label: \"friend\",\n        category: \"personal\"\n    },\n    {\n        id: 2,\n        label: \"colleague\",\n        category: \"professional\"\n    },\n    {\n        id: 3,\n        label: \"mentor\",\n        category: \"professional\"\n    },\n    {\n        id: 4,\n        label: \"supervisor\",\n        category: \"professional\"\n    },\n    {\n        id: 5,\n        label: \"close friend\",\n        category: \"personal\"\n    },\n    {\n        id: 6,\n        label: \"acquaintance\",\n        category: \"personal\"\n    },\n    {\n        id: 7,\n        label: \"partner\",\n        category: \"romantic\"\n    },\n    {\n        id: 8,\n        label: \"date\",\n        category: \"romantic\"\n    }\n];\nconst sampleNotes = [\n    {\n        id: 1,\n        text: \"Had coffee and discussed new project ideas\",\n        person: \"Alex Johnson\",\n        time: \"Dec 15, 2024 2:00 PM\",\n        location: \"Starbucks Downtown\",\n        event: \"Coffee meeting\",\n        sentiment: \"positive\",\n        contactIds: [\n            1\n        ],\n        createdAt: \"2024-12-15T14:00:00Z\"\n    },\n    {\n        id: 2,\n        text: \"Team lunch meeting about Q1 strategy\",\n        person: \"Sarah Chen\",\n        time: \"Dec 12, 2024 12:00 PM\",\n        location: \"Office Conference Room\",\n        event: \"Team meeting\",\n        sentiment: \"neutral\",\n        contactIds: [\n            2\n        ],\n        createdAt: \"2024-12-12T12:00:00Z\"\n    }\n];\nconst sampleContacts = [\n    {\n        id: 1,\n        name: \"Alex Johnson\",\n        occupationId: 1,\n        organizationId: 1,\n        birthDate: \"1990-05-15\",\n        lastInteraction: 1734307200000,\n        subjectIds: [\n            1,\n            2,\n            3,\n            6,\n            9,\n            13,\n            15,\n            22,\n            27,\n            29,\n            32\n        ],\n        relationshipIds: [\n            1,\n            5\n        ],\n        noteIds: [\n            1\n        ]\n    },\n    {\n        id: 2,\n        name: \"Sarah Chen\",\n        // Removed occupationId and organizationId to test missing data\n        birthDate: \"1988-09-22\",\n        lastInteraction: 1734048000000,\n        subjectIds: [\n            4,\n            7,\n            10,\n            13,\n            14,\n            19,\n            21,\n            24,\n            26,\n            30\n        ],\n        relationshipIds: [\n            2,\n            4\n        ],\n        noteIds: [\n            2\n        ]\n    },\n    {\n        id: 3,\n        name: \"Michael Rodriguez\",\n        occupationId: 3,\n        // Removed organizationId to test missing organization\n        birthDate: \"1992-03-10\",\n        lastInteraction: 1733788800000,\n        subjectIds: [\n            5,\n            8,\n            11,\n            14,\n            17,\n            19,\n            23,\n            28,\n            12,\n            16\n        ],\n        relationshipIds: [\n            1,\n            2\n        ],\n        noteIds: []\n    },\n    {\n        id: 4,\n        name: \"Emily Watson\",\n        occupationId: 4,\n        organizationId: 4,\n        // Removed birthDate to test missing birth date\n        lastInteraction: 1733616000000,\n        subjectIds: [\n            2,\n            6,\n            9,\n            13,\n            15,\n            20,\n            22,\n            25,\n            27,\n            29\n        ],\n        relationshipIds: [\n            2,\n            3\n        ],\n        noteIds: []\n    },\n    {\n        id: 5,\n        name: \"David Kim\",\n        // Removed occupationId to test missing occupation\n        organizationId: 5,\n        birthDate: \"1991-07-18\",\n        lastInteraction: 1733356800000,\n        subjectIds: [\n            3,\n            7,\n            10,\n            12,\n            14,\n            18,\n            21,\n            24,\n            26,\n            30\n        ],\n        relationshipIds: [\n            1,\n            2\n        ],\n        noteIds: []\n    },\n    {\n        id: 6,\n        name: \"Lisa Thompson\",\n        occupationId: 6,\n        organizationId: 6,\n        birthDate: \"1987-12-03\",\n        lastInteraction: 1733184000000,\n        subjectIds: [\n            1,\n            4,\n            8,\n            11,\n            15,\n            17,\n            19,\n            23,\n            28,\n            12\n        ],\n        relationshipIds: [\n            2,\n            6\n        ],\n        noteIds: []\n    },\n    {\n        id: 7,\n        name: \"James Wilson\",\n        // Removed all optional fields to test complete missing data\n        lastInteraction: 1733006400000,\n        subjectIds: [\n            2,\n            5,\n            9,\n            12,\n            16,\n            20,\n            23,\n            25,\n            27,\n            29\n        ],\n        relationshipIds: [\n            2,\n            7\n        ],\n        noteIds: []\n    },\n    {\n        id: 8,\n        name: \"Maria Garcia\",\n        occupationId: 8,\n        // Removed organizationId and birthDate\n        lastInteraction: 1732752000000,\n        subjectIds: [\n            1,\n            3,\n            6,\n            10,\n            13,\n            17,\n            21,\n            24,\n            26,\n            30\n        ],\n        relationshipIds: [\n            1,\n            3\n        ],\n        noteIds: []\n    },\n    {\n        id: 9,\n        name: \"Robert Taylor\",\n        occupationId: 9,\n        organizationId: 9,\n        birthDate: \"1985-01-30\",\n        lastInteraction: 1732579200000,\n        subjectIds: [\n            4,\n            7,\n            11,\n            14,\n            18,\n            19,\n            22,\n            28,\n            12,\n            15\n        ],\n        relationshipIds: [\n            2,\n            5\n        ],\n        noteIds: []\n    },\n    {\n        id: 10,\n        name: \"Jennifer Lee\",\n        // Removed occupationId and birthDate\n        organizationId: 10,\n        lastInteraction: 1732406400000,\n        subjectIds: [\n            3,\n            8,\n            10,\n            13,\n            16,\n            20,\n            23,\n            25,\n            27,\n            29\n        ],\n        relationshipIds: [\n            1,\n            6\n        ],\n        noteIds: []\n    },\n    {\n        id: 11,\n        name: \"Christopher Brown\",\n        occupationId: 11,\n        organizationId: 11,\n        birthDate: \"1988-12-14\",\n        lastInteraction: 1732233600000,\n        subjectIds: [\n            2,\n            5,\n            9,\n            12,\n            15,\n            17,\n            21,\n            24,\n            26,\n            30\n        ],\n        relationshipIds: [\n            2,\n            4\n        ],\n        noteIds: []\n    },\n    {\n        id: 12,\n        name: \"Amanda Davis\",\n        // Removed all optional fields to test complete missing data\n        lastInteraction: 1732060800000,\n        subjectIds: [\n            1,\n            4,\n            7,\n            11,\n            14,\n            18,\n            19,\n            22,\n            28,\n            12\n        ],\n        relationshipIds: [\n            1,\n            2\n        ],\n        noteIds: []\n    }\n];\nfunction getSampleData() {\n    return {\n        contacts: sampleContacts,\n        subjects: sampleSubjects,\n        organizations: sampleOrganizations,\n        occupations: sampleOccupations,\n        relationships: sampleRelationships,\n        notes: sampleNotes\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/sampleData.ts\n"));

/***/ })

});